import javax.xml.parsers.DocumentBuilder; 
import javax.xml.parsers.DocumentBuilderFactory; 
import javax.xml.parsers.FactoryConfigurationError; 
import javax.xml.parsers.ParserConfigurationException;
 
import org.xml.sax.SAXException; 
import org.xml.sax.SAXParseException; 

import org.w3c.dom.Document;
import org.w3c.dom.DOMException;

import java.io.*;

public class XMLParser {

	SephiaBotData data;
	Document document; 
	
	public XMLParser(SephiaBotData data, String directory, String fileName) {
		this.data = data;
		parseFile(directory, fileName);
	}
	
	public void parseFile(String directory, String fileName)	{
		DocumentBuilderFactory factory =
			DocumentBuilderFactory.newInstance();
		//factory.setNamespaceAware(true);
		//factory.setValidating(true); 
		
		try {
			DocumentBuilder builder =
				factory.newDocumentBuilder();
			document = builder.parse(new File(directory, fileName));
			
		} catch (SAXParseException spe) {
			// Error generated by the parser
			data.log("XML parsing error, line " + spe.getLineNumber() + ", uri " + spe.getSystemId() + "  " + spe.getMessage() );
			
			// Use the contained exception, if any
			Exception x = spe;
			if (spe.getException() != null)
				x = spe.getException();
			x.printStackTrace();
			
		} catch (SAXException sxe) {
			// Error generated by this application
			// (or a parser-initialization error)
			Exception x = sxe;
			if (sxe.getException() != null)
				x = sxe.getException();
			x.printStackTrace();
			
		} catch (ParserConfigurationException pce) {
			// Parser with specified options can't be built
			pce.printStackTrace();
			
		} catch (IOException ioe) {
			// I/O error
			ioe.printStackTrace();
		}
	} // main 
}
